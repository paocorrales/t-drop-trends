---
title: "Preparing your manuscript"
format:
    agu-pdf:
        keep-tex: true
    agu-html: default
author:
  - name: Paola B Corrales
    affiliations:
      - name: Monash University
        department: School of Earth, Atmosphere and Environment
        region: VIC
        country: Australia
    corresponding: true
    orcid: 0000-0003-1923-9129
    email: fake_email@fakeyfake.com
  - name: Charles Teague
    affiliations:
      - name: Monash University
        department: School of Earth, Atmosphere and Environment
        region: VIC
        country: Australia
    orcid: 0000-0001-8715-9476
    email: martin.singh@monash.edu
abstract: |
  The abstract (1) states the nature of the investigation and (2) summarizes the important conclusions. The abstract should be suitable for indexing. Your abstract should:

    - Be set as a single paragraph.
    - Be less than 250 words for all journals except GRL, for which the limit is 150 words.
    - Not include table or figure mentions.
    - Avoid reference citations unless dependent on or directly related to another paper (e.g., companion, comment, reply, or commentary on another paper(s)). AGU’s Style Guide discusses formatting citations in abstracts.
    - Define all abbreviations.
plain-language-summary: |
  A Plain Language Summary (PLS) can be an incredibly effective science communication tool. By summarizing your paper in non-technical terms, you can explain your research and its relevance to a much broader audience. A PLS is required for submissions to AGU Advances, G-Cubed, GeoHealth, GRL, JAMES, JGR: Biogeosciences, JGR: Oceans, JGR: Planets, JGR: Solid Earth, JGR: Atmospheres, Space Weather, and Reviews of Geophysics, but optional for other journals.  A PLS should be no longer than 200 words and should be free of jargon, acronyms, equations, and any technical information that would be unknown to people from outside your scientific discipline. Read our tips for creating an effective PLS.
keywords: []
key-points:
  - Key Points convey the main points and conclusions of the article. 
  - Up to three key point statements are allowed, and each is limited to at most 140 characters with no abbreviations.
  - Key Points are not included in the word count.
bibliography: cold-fronts.bib  
citation:
  container-title: Geophysical Research Letters
keep-tex: true
date: last-modified
execute: 
  cache: true
  echo: false
  message: false
  warning: false
---

```{r}
#| label: setup

library(metR)
library(ggplot2)
library(data.table)
library(lubridate)
library(here)
library(cowplot)
library(ggside)
library(patchwork)

global_map <- rnaturalearth::ne_coastline()
models_in_gadi <- c("CMCC-ESM2", "EC-Earth3", "INM-CM4-8", "INM-CM5-0", 
                    "MPI-ESM1-2-HR", "NorESM2-MM", "EC-Earth3-CC", "EC-Earth3-Veg",
                    "EC-Earth3-Veg-LR", "GFDL-CM4")
```



## Introduction

Cold fronts are a important feature of weather in extratropical regions and are partly responsible for the precipitation in these areas [@konstali2024]. Cold fronts are also linked to extreme events, such as heavy precipitation [@catto2013] and severe wildfires in southern Australia [@cai2022]. 

Identifying fronts can be a complex task. To date, several computational methods have been developed that use different characteristics of fronts. Some of these methods looks for thermodynamic changes associated with temperature and humidity in different atmospheric levels [@berry2011], others identify changes in the wind field [@simmonds2012]. These methods rely on the data being in a regular grid (e.g. outputs from numerical models or reanalysis) and it results depend on setting different thresholds that need to be calibrated for different model resolutions. 

For this study we use day-to-day changes in near-surface temperature (or drops in temperature) to estimate the passage of fronts [@reeder2015]. This very simple method can be applied to both data from station observations and gridded data (with varying resolution, up to 2.5 degrees [@king2024]). Previous studies have shown that this method is suitable for the detection of strong cold fronts in southeastern Australia [@cai2022, @reeder2015]. Recently, @king2024 demonstrated that this method can successfully identify cold fronts with results comparable to those obtained with other methodologies. Furthermore, @king2024 calculated a climatology of front frequency using global climate models from phase 6 of the Coupled Model Intercomparison Project (CMIP6). While the models tend to overestimate front frequency in polar regions and underestimate the occurrence of large temperature drops over midlatitude land regions compared with ERA5, they accurately represent the patterns of front frequency equatorward of 60°.

As global temperatures continue to rise, understanding how this warming will impact the occurrence of cold fronts is very important. A few studies have addressed this question, for example @catto2014 used objective front identification [@berry2011] in 18 CMIP5 models and compared the changes between historical simulations between 1980-2005 and the Representative Concentration Pathway 8.5 between 2080-2100. They found an overall decrease in front frequency in the Northern Hemisphere, with a poleward shift in the maximum frequency and a significant decrease at high latitudes. In contrast, the Southern Hemisphere showed a poleward shift in the frequency maximum. On the other hand, @konstali2024, identified fronts in the CESM2-LE model simulations using gradient of equivalent potential temperature in 850 hPa and found an increase in the frequency of fronts that could be related to fronts becoming larger or more elongated in both hemispheres. 

In this paper we build on the drops in temperature methodology to evaluate the change in frequency of cold fronts in a warmer future compared with the resent past using a set of models from CMIP6. In an effort to understand possible causes to the potential changes, we explored the relationship between changes in front frequency and transient eddy kinetic energy, that is directly related to storm tracks. Several studies have shown a poleward shift on the storm tracks in future climate change scenarios, particularly in the Southern Hemisphere [@ogorman2010, @tamarin2017, @chemke2022], and these changes could potentially influence the location and intensity of future cold fronts.



## Data and methods

```{r}
#| label: model-table

readr::read_rds(here("data/cmip_file_list_scenario.rds")) |> 
  _[nominal_resolution == "100 km" & source_id %in% models_in_gadi, 
    .(source_id, institution_id, nominal_resolution)] |> 
  unique(by = "source_id") |> 
  knitr::kable(col.names = c("Model", "Institution", "Original resolution"),
               caption = "List of models used for the analysis.") |> 
  kableExtra::kable_classic()
```



## Results



```{r}
#| label: trend
#| fig-width: 10
#| fig-height: 5
#| fig.cap: "a) Multimodel change in drops in temperature frequency (%, SSP5-8.5 2018-2100 minus Historical 1980-2000) and zonal mean change over sea b) and land c), each grey line represent the models listed in Table 1 and in black, the multimodel mean. "

data <- purrr::map(Sys.glob(here("data/eke_mean/*hist*mean.nc")), function(f) {
  
  message(f)
  meta <- unglue::unglue(basename(f), patterns = c("{var}_{model}_{scenario}_mean.nc", "{var}_{model}_{scenario}_mean.nc"))
  
  if (meta[[1]][["var"]] == "eke") {
    var <- "ua"
  } else {
    var <- "tasmax"
  }
  file_scenario <- here(paste0("data/eke_mean/", meta[[1]][["var"]], "_", meta[[1]][["model"]], "_ssp585_mean.nc"))
  
  ReadNetCDF(f, vars = c(hist = var)) |> 
    _[, let(ssp585 = ReadNetCDF(file_scenario, vars = c(ssp585 = var), out = "vector")[[1]])] |> 
    _[, let(model = meta[[1]][["model"]],
            var = meta[[1]][["var"]],
            change = ssp585 - hist,
            lat = round(lat, digits = 8),
            plev = NULL)] |> 
    _[]
  
}) |> rbindlist()



map_trend <- data |> 
  _[(model %in% models_in_gadi) & is.finite(change)] |>
  dcast(lat + lon + model ~ var, value.var = "change") |> 
  _[, .(mean_dt = mean(deltap97.5, na.rm = TRUE)), by = .(lon, lat)] |> 
  ggplot(aes(ConvertLongitude(lon), lat)) +
  geom_contour_fill(aes(z = mean_dt/365*100, fill = after_stat(level)),
                    breaks = c(-Inf, seq(-3, 3, 0.2), Inf)) +
  scale_fill_divergent_discretised(mid = "#f7f7f7",
                                   guide = guide_colorbar(barheight = 0.5),
                                   labels = function(x) JumpBy(x, 2, fill = "")) +
  geom_sf(data = global_map, inherit.aes = FALSE, fill = NA, linewidth = 0.2) +
  coord_sf(expand = FALSE) +
  labs(x = NULL, y = NULL, fill = "%") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "bottom",
        legend.frame = ggplot2::element_rect(color = "black", linewidth = 0.4),
        legend.key.width = grid::unit(1, 'null'),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(), plot.margin = unit(c(0, 0 , 0 , 0), units = "mm")) 

mean_trend <- data |> 
  _[(model %in% models_in_gadi) & is.finite(change)] |>
  dcast(lat + lon + model ~ var, value.var = "change") |> 
  _[, let(land = MaskLand(lon, lat))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  _[, .(mean_dt = mean(deltap97.5, na.rm = TRUE)), by = .(lat, land, model)] |> 
  ggplot(aes(mean_dt, lat)) +
  geom_hline(yintercept = 0, color = "grey80") +
  geom_vline(xintercept = 0, color = "grey80") +
  geom_path(aes(group = model), color = "grey70", alpha = 0.7) +
  stat_summary(orientation = "y", geom = "line") +
  scale_y_latitude(breaks = seq(-80, 80 , 20)) +
  facet_wrap(~land) +
  tagger::tag_facets(tag_pool = c("b", "c")) +
  labs(x = "Change (%)") +
  coord_fixed(ratio = 1/2.8) +
  theme_minimal() +
  theme(legend.position = "bottom",
        panel.background = element_rect(fill = "#fbfbfb", color = NA),
        strip.text.x = element_text(size = 12),
        plot.margin = unit(c(0, 0 , 1.9, -0.40), units = "cm"),
        tagger.panel.tag.text = element_text(size = 12),
        tagger.panel.tag.background = element_rect(fill = "white", color = "white")) 

plot_grid(map_trend, mean_trend, labels = c('a)', ''), 
          label_x = 0, label_y = 0.9,
          label_fontface = "plain", 
          label_colour = "white",
          rel_widths = c(1.75, 1))

```


   

```{r}
#| label: serie
#| fig-width: 8
#| fig-height: 5
#| fig.cap: "Mean frequency of temperature drops for the historical period (1850-2014) and SSP5-8.5 (2015-2100) over land and sea for different latitude bands. Left to each main figure the intermodel distribution is shown for the period 2080-2100."

serie <- purrr::map(Sys.glob(here("data/series/serie_freq_deltap97.5_*_100km.nc")), function(f) {
  
  meta <- unglue::unglue(basename(f), "serie_freq_{threshold}_{scenario}_100km.nc")
  ReadNetCDF(f, vars = c(mean_freq = "tasmax")) |> 
    _[, let(year = year(time),
            scenario = meta[[1]][["scenario"]])] |> 
    _[, let(time = NULL)]
  
}) |> rbindlist() |> 
  _[, let(scenario = factor(scenario, labels = c("Historical", "SSP5-8.5")))]

model_spread <- data |> 
  _[, let(land = MaskLand(lon, lat))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  _[, let(serie = fcase(lat %between% c(48, 50) & land == "Sea", "50 - NH",
                        lat %between% c(38, 40) & land == "Sea", "40 - NH",
                        lat %between% c(28, 30) & land == "Sea", "30 - NH", 
                        lat %between% c(48, 50) & land == "Land", "50 - NH",
                        lat %between% c(38, 40) & land == "Land", "40 - NH",
                        lat %between% c(28, 30) & land == "Land", "30 - NH",
                        lat %between% c(-50, -48) & land == "Land", "50 - SH",
                        lat %between% c(-40, -38) & land == "Land", "40 - SH",
                        lat %between% c(-30, -28) & land == "Land", "30 - SH",
                        lat %between% c(-50, -48) & land == "Sea", "50 - SH",
                        lat %between% c(-40, -38) & land == "Sea", "40 - SH",
                        lat %between% c(-30, -28) & land == "Sea", "30 - SH"))] |>
  _[!is.na(serie) & var == "deltap97.5" & model %in% models_in_gadi] |>
  tidyr::separate(serie, into = c("lat", "hemisphere"), sep = " - ") |> 
  setDT() |> 
  _[, .(mean_freq = mean(ssp585)), by = .(lat, hemisphere, land, model)] |> 
  _[, let(scenario = "SSP5-8.5")] 

serie_regions <- serie |>
  _[!(year == 2014 & scenario != "historical")] |>
  _[, let(land = MaskLand(lon, lat))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  _[, let(serie = fcase(lat %between% c(48, 50) & land == "Sea", "50 - NH",
                        lat %between% c(38, 40) & land == "Sea", "40 - NH",
                        lat %between% c(28, 30) & land == "Sea", "30 - NH", 
                        lat %between% c(48, 50) & land == "Land", "50 - NH",
                        lat %between% c(38, 40) & land == "Land", "40 - NH",
                        lat %between% c(28, 30) & land == "Land", "30 - NH",
                        lat %between% c(-50, -48) & land == "Land", "50 - SH",
                        lat %between% c(-40, -38) & land == "Land", "40 - SH",
                        lat %between% c(-30, -28) & land == "Land", "30 - SH",
                        lat %between% c(-50, -48) & land == "Sea", "50 - SH",
                        lat %between% c(-40, -38) & land == "Sea", "40 - SH",
                        lat %between% c(-30, -28) & land == "Sea", "30 - SH"))] |>
  _[!is.na(serie)] |> 
  _[, .(mean_freq = mean(mean_freq)), by = .(land, serie, year, scenario)] 

serie_regions |> 
  tidyr::separate(serie, into = c("lat", "hemisphere"), sep = " - ") |> 
  setDT() |> 
  # _[, let(lat = forcats::fct_relevel(lat, "55N", after = 0))] |> 
  ggplot(aes(year, mean_freq, color = lat, group = interaction(scenario, lat))) +
  geom_line(alpha = 0.3) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_ysideboxplot(data = model_spread, aes(x = lat), orientation = "x") +
  scale_color_manual(values = c("#004C73", "#CC3311", "#EE7733")) +
  facet_grid(land~hemisphere, scale = "free") +
  labs(x = "Year", y = "Frequency (days/year)", color = "Latitude") +
  theme_minimal() +
  theme(legend.position = "inside",
        legend.position.inside = c(0.8, 0.9),
        legend.direction = "horizontal",
        legend.background = element_rect(fill = "#fbfbfb", color = "#fbfbfb"),
        panel.background = element_rect(fill = "#fbfbfb", color = NA),
        strip.text = element_text(size = 12),
        ggside.axis.text.x = element_blank())

```



```{r}
#| label: distribution
#| fig-width: 8
#| fig-height: 5
#| fig.cap: "Change in the frequency of drops in temperature (SSP5-8.5 2018-2100 minus Historical 1980-2000) for different percentiles calculates over the historical period (1979-2014)."

file_list <- Sys.glob(here(paste0("data/series/serie_freq_deltap9*", c("historical", "ssp585"), "*")))

dist <- purrr::map(file_list, function(f) {
  message(f)
  
  meta <- unglue::unglue(basename(f), "serie_freq_deltap{percentile}_{scenario}_100km.nc")
  
  if (meta[[1]][["scenario"]] == "historical") {
    
    ReadNetCDF(f, vars = "tasmax", subset = list(time = c("1980-01-01", "2000-12-31"))) |> 
      _[, .(mean_freq = mean(tasmax)), by = .(lon, lat)] |> 
      _[, let(percentile = meta[[1]][["percentile"]],
              scenario = meta[[1]][["scenario"]])]
  } else {
    
    ReadNetCDF(f, vars = "tasmax", subset = list(time = c("2080-01-01", "2100-12-31"))) |> 
      _[, .(mean_freq = mean(tasmax)), by = .(lon, lat)] |> 
      _[, let(percentile = meta[[1]][["percentile"]],
              scenario = meta[[1]][["scenario"]])]
  }
  
}) |> rbindlist() |> 
  _[, let(land = MaskLand(lon, lat),
          region = fcase(lat %between% c(25, 55), "NH",
                         lat %between% c(-55, -25), "SH",
                         default = NA))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] 

dist |> 
  _[, let(serie = fcase(lat %between% c(48, 50) & land == "Sea", "50 - NH",
                        lat %between% c(38, 40) & land == "Sea", "40 - NH",
                        lat %between% c(28, 30) & land == "Sea", "30 - NH", 
                        lat %between% c(48, 50) & land == "Land", "50 - NH",
                        lat %between% c(38, 40) & land == "Land", "40 - NH",
                        lat %between% c(28, 30) & land == "Land", "30 - NH",
                        lat %between% c(-50, -48) & land == "Land", "50 - SH",
                        lat %between% c(-40, -38) & land == "Land", "40 - SH",
                        lat %between% c(-30, -28) & land == "Land", "30 - SH",
                        lat %between% c(-50, -48) & land == "Sea", "50 - SH",
                        lat %between% c(-40, -38) & land == "Sea", "40 - SH",
                        lat %between% c(-30, -28) & land == "Sea", "30 - SH"))] |>
  _[!is.na(serie)] |>
  _[, .(mean_freq = mean(mean_freq)), by = .(land, serie, percentile, scenario)] |> 
  dcast(land + serie + percentile ~ scenario, value.var = "mean_freq") |> 
  tidyr::separate(serie, into = c("lat", "hemisphere"), sep = " - ") |> 
  setDT() |> 
  ggplot(aes(percentile, ssp585 / historical)) +
  geom_col(aes(fill = lat), position = "dodge") +
  scale_fill_manual(values = c("#004C73", "#CC3311", "#EE7733")) +
  scale_y_log10() +
  facet_grid(land~hemisphere) +
  labs(x = "Percentile", y = "Ratio (SSP5-8.5/Historical)",
       fill = "Latitude") +
  theme_minimal() +
  theme(legend.position = "inside",
        legend.position.inside = c(0.8, 0.9),
        legend.direction = "horizontal",
        legend.background = element_rect(fill = "#fbfbfb", color = "#fbfbfb"),
        panel.background = element_rect(fill = "#fbfbfb", color = NA),
        strip.text = element_text(size = 12))


```



```{r}
#| label: eke
#| fig-width: 8
#| fig-height: 4
#| fig.cap: "Changes in EKE and drops in temperature frequency for SSP5-8.5 compared with the historical period and each model. Values are calculated for northern () and southern () hemisphere and over sea (circles) and land(triangles). Each solid line correspond to a linea regresion for each hemisphere. "

change <- data |> 
  _[(model %in% models_in_gadi) & is.finite(change)] |>
  dcast(lat + lon + model ~ var, value.var = "change") |> 
  
  _[, let(land = MaskLand(lon, lat),
          region = fcase(lat %between% c(25, 55), "NH",
                         lat %between% c(-55, -25), "SH",
                         default = NA))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  na.omit() |> 
  _[, .(mean_eke = mean(eke),
        mean_deltat = mean(deltap97.5)), by = .(region, land, model)] |> 
  ggplot(aes(mean_eke, mean_deltat)) +
  geom_point(aes(color = region, shape = land), size = 2) +
  geom_smooth(aes(colour = region), method = "lm", se = FALSE) +
  scale_color_manual(values = c("cyan4", "orange")) +
  labs(x = "EKE change", y = "Temp drop frequency change",
       color = NULL, shape = NULL) +
  theme_minimal() +
  theme(legend.position = "inside",
        legend.position.inside = c(0.85, 0.15),
        legend.direction = "horizontal",
        legend.background = element_rect(fill = "#fbfbfb", color = "#fbfbfb"),
        legend.margin = margin(0, 0, 0, 0, unit = "mm"),
        panel.background = element_rect(fill = "#fbfbfb", color = NA))

deltat_mean <- data |> 
  _[(model %in% models_in_gadi) & is.finite(change)] |>
  dcast(lat + lon + model ~ var, value.var = "change") |> 
  _[, let(land = MaskLand(lon, lat))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  _[, .(mean_dt = mean(deltap97.5, na.rm = TRUE)), by = .(lat, land)]

mean_trend_dt <- data |> 
  _[(model %in% models_in_gadi) & is.finite(change)] |>
  dcast(lat + lon + model ~ var, value.var = "change") |> 
  _[, let(land = MaskLand(lon, lat))] |> 
  _[, let(land = factor(land, labels = c("Sea", "Land")))] |> 
  _[, .(mean_eke = mean(eke, na.rm = TRUE)), by = .(lat, land, model)] |> 
  ggplot(aes(mean_eke, lat)) +
  geom_hline(yintercept = 0, color = "grey80") +
  geom_vline(xintercept = 0, color = "grey80") +
  geom_path(aes(group = model), color = "grey70", alpha = 0.7) +
  stat_summary(orientation = "y", geom = "line", aes(color = "EKE")) +
  geom_path(data = deltat_mean, aes(x = mean_dt, color = "DeltaT")) +
  scale_color_manual(values = c("DeltaT" = "red4", "EKE" = "black")) +
  scale_y_latitude(breaks = seq(-80, 80 , 20)) +
  facet_wrap(~land) +
  tagger::tag_facets(tag_pool = c("b", "c")) +
  labs(x = "Change (%)", color = NULL) +
  coord_fixed(ratio = 1/1.5) +
  theme_minimal() +
  theme(legend.position = "bottom",
        panel.background = element_rect(fill = "#fbfbfb", color = NA),
        strip.text.x = element_text(size = 12),
        plot.margin = unit(c(0, 0 , 1.9, -0.40), units = "cm"),
        tagger.panel.tag.text = element_text(size = 12),
        tagger.panel.tag.background = element_rect(fill = "white", color = "white")) 

plot_grid(change, mean_trend_dt, labels = c('a)', ''), 
          label_x = 0.10, label_y = 0.98,
          label_fontface = "plain", 
          label_colour = "black",
          rel_widths = c(1.75, 1))
```


## Summary and Discussion

Detection of fronts over oceans when using a constant threshold
Weak fronts are not detected?


## Acknowledgments

Phasellus interdum tincidunt ex, a euismod massa pulvinar at. Ut fringilla ut nisi nec volutpat. Morbi imperdiet congue tincidunt. Vivamus eget rutrum purus. Etiam et pretium justo. Donec et egestas sem. Donec molestie ex sit amet viverra egestas. Nullam justo nulla, fringilla at iaculis in, posuere non mauris. Ut eget imperdiet elit.

## Open research

Phasellus interdum tincidunt ex, a euismod massa pulvinar at. Ut fringilla ut nisi nec volutpat. Morbi imperdiet congue tincidunt. Vivamus eget rutrum purus. Etiam et pretium justo. Donec et egestas sem. Donec molestie ex sit amet viverra egestas. Nullam justo nulla, fringilla at iaculis in, posuere non mauris. Ut eget imperdiet elit.

## References {.unnumbered}

:::{#refs}

:::